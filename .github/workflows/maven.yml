name: Create release

on:
#    milestone:
#        types: [closed]
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
#  prepare-version:  
#    runs-on: ubuntu-latest
#    
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        token: ${{ secrets.PAT }}
#    - name: Create version file
#      run: cat pom.xml |grep version| head -1|sed -e 's/<[^>]*>//g'|xargs > current.version
#    - name: Save version
#      uses: actions/upload-artifact@v1
#      with:
#        name: app-version
#        path: current.version
  
  build-linux:

    runs-on: ubuntu-latest

    steps:
#    - name: Download version file
#      uses: actions/download-artifact@v1
#      with:
#        name: app-version     
#    - name: Version
#      run: |
#        APP_VERSION=`cat app-version/current.version`
#        echo "Building version: $APP_VERSION"
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Build with Maven
      run: java -version ; mvn -X clean install resources:resources compiler:compile javafx:jlink --file pom.xml
    - name: Create jpackage
      run: jpackage -n notepack --runtime-image target/notepack/ -m notepack/notepack.Main -d target/notepack.deb
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: release-linux-$APP_VERSION.zip
        path: target/notepack


  build-windows:

    runs-on: windows-latest

    steps:
#    - name: Download version file
#      uses: actions/download-artifact@v1
#      with:
#        name: app-version        
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
#    - shell: bash
#      run: |
#         APP_VERSION=`cat app-version/current.version`
#         echo "Building version: $APP_VERSION"
    - name: Build with Maven
      run: java -version ; mvn -X clean install resources:resources compiler:compile javafx:jlink --file pom.xml
    - name: Create jpackage
      run: jpackage -n notepack --runtime-image target/notepack/ -m notepack/notepack.Main --icon gfx/logo_64.ico   
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: release-windows.zip
        path: target/notepack


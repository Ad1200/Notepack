name: Create release

#on:
#    milestone:
#        types: [closed]
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

#on:
#  push:
#    tags:
#      - 'v*'

on:
  release:
    types: [created]

jobs:
  
  build-linux:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Build with Maven
      run: java -version ; mvn -X clean install resources:resources compiler:compile javafx:jlink --file pom.xml
    - name: Create zip runtime
      run: cd target ; zip -r notepack.zip notepack/
      
    - name: Create DEB
      run: jpackage -n notepack --runtime-image target/notepack/ --app-version ${{ github.event.release.tag_name }} -m notepack/notepack.Main -d notepack.deb --type deb --java-options '-Xms256m -Xmx2g' --linux-deb-maintainer hello@ogefest.com --linux-shortcut --description 'Notepack - Privacy oriented, without vendor lock in note taking desktop application' --linux-menu-group Office --vendor Ogefest --icon gfx/logo_128.png --license-file LICENSE
    - name: Rename DEB
      run: mv notepack.deb/*.deb notepack.deb/file.deb

    - name: Create RPM
      run: jpackage -n notepack --runtime-image target/notepack/ --app-version ${{ github.event.release.tag_name }} -m notepack/notepack.Main -d notepack.rpm --type rpm --java-options '-Xms256m -Xmx2g' --linux-shortcut --linux-rpm-license-type MPLv2.0 --description 'Notepack - Privacy oriented, without vendor lock in note taking desktop application' --linux-menu-group Office --vendor Ogefest --icon gfx/logo_128.png --license-file LICENSE --linux-app-category Office
    - name: Rename RPM
      run: mv notepack.rpm/*.rpm notepack.rpm/file.rpm
      
    - name: Download appimage
      run: wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage"
    - name: Build appimage
      run: cp -r target/notepack/ appimage-base-dir/ ; chmod +x appimagetool ; ./appimagetool appimage-base-dir/ notepack.AppImage
      
    - name: Upload AppImage
#      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./notepack.AppImage
        asset_name: notepack-${{ github.event.release.tag_name }}.AppImage
        asset_content_type: application/octet-stream
        
    - name: Upload DEB
#      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./notepack.deb/file.deb
        asset_name: notepack-${{ github.event.release.tag_name }}-1_amd64.deb
        asset_content_type: application/octet-stream        
        
    - name: Upload RPM
#      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./notepack.rpm/file.rpm
        asset_name: notepack-${{ github.event.release.tag_name }}_amd64.rpm
        asset_content_type: application/octet-stream     
        
    - name: Upload Linux Runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/notepack.zip
        asset_name: notepack-${{ github.event.release.tag_name }}-linux-runtime.zip
        asset_content_type: application/octet-stream          
      

  build-windows:

    runs-on: windows-latest

    steps:
      
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Build with Maven
      run: java -version ; mvn -X clean install resources:resources compiler:compile javafx:jlink --file pom.xml
      
    - name: Create zip runtime
      run: cd target ; 7z a notepack.zip notepack/      
      
    - name: Create jpackage
      run: jpackage -n notepack --runtime-image target/notepack/  --app-version ${{ github.event.release.tag_name }} --java-options '-Xms256m -Xmx2g' -m notepack/notepack.Main --icon gfx/logo_64.ico --win-dir-chooser --win-shortcut --win-menu --win-menu-group NotePack -d notepack.msi --vendor Ogefest --license-file LICENSE
    - name: Rename MSI
      run: mv notepack.msi/*.msi notepack.msi/file.msi
    
    - name: Upload Windows Runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/notepack.zip
        asset_name: notepack-${{ github.event.release.tag_name }}-windows-runtime.zip
        asset_content_type: application/octet-stream      
    
    - name: Upload Windows Msi
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./notepack.msi/file.msi
        asset_name: notepack-${{ github.event.release.tag_name }}-windows-installer.msi
        asset_content_type: application/octet-stream   
        
#    - name: Archive production artifacts zip
#      uses: actions/upload-artifact@v1
#      with:
#        name: release-windows.zip
#        path: target/notepack
#    - name: Archive production artifacts msi
#      uses: actions/upload-artifact@v1
#      with:
#        name: notepack-windows
#        path: notepack.msi 


name: Create release

on:
  release:
    types: [created]

jobs:
  
  build-linux:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
#    - name: Build with Maven
#      run: mvn -X clean install resources:resources compiler:compile javafx:jlink --file pom.xml
#    - name: Create zip runtime
#      run: cd target ; zip -r notepack.zip notepack/
      
    - name: Create DEB
      run: gradle jpackage -PinstallerType=deb
    - name: Rename DEB
      run: mv build/Notepack-package/*.deb notepack.deb/file.deb

    - name: Create RPM
      run: gradle jpackage -PinstallerType=rpm
    - name: Rename RPM
      run: mv build/Notepack-package/*.rpm notepack.rpm/file.rpm
      
    - name: Download appimage
      run: wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage"
    - name: Build appimage
      run: cp -r build/Notepack-package/Notepack/ appimage-base-dir/ ; chmod +x appimagetool ; ./appimagetool appimage-base-dir/ notepack.AppImage
      
    - name: Upload AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./notepack.AppImage
        asset_name: notepack-${{ github.event.release.tag_name }}.AppImage
        asset_content_type: application/octet-stream
        
    - name: Upload DEB
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./notepack.deb/file.deb
        asset_name: notepack-${{ github.event.release.tag_name }}-1_amd64.deb
        asset_content_type: application/octet-stream        
        
    - name: Upload RPM
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./notepack.rpm/file.rpm
        asset_name: notepack-${{ github.event.release.tag_name }}_amd64.rpm
        asset_content_type: application/octet-stream     
        
    - name: Upload Linux Runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./target/notepack.zip
        asset_name: notepack-${{ github.event.release.tag_name }}-linux-runtime.zip
        asset_content_type: application/octet-stream          
      

#  build-windows:
#
#    runs-on: windows-latest
#
#    steps:
#      
#    - uses: actions/checkout@v2
#    - name: Set up JDK 14
#      uses: actions/setup-java@v1
#      with:
#        java-version: 14
#
#    - name: Build with Maven
#      run: java -version ; mvn -X clean install resources:resources compiler:compile javafx:jlink --file pom.xml
#      
#    - name: Create zip runtime
#      run: cd target ; 7z a notepack.zip notepack/      
#      
#    - name: Create jpackage
#      run: jpackage -n notepack --runtime-image target/notepack/  --app-version ${{ github.event.release.tag_name }} --java-options '-Xms256m -Xmx2g' -m notepack/notepack.Main --icon gfx/logo_64.ico --win-dir-chooser --win-shortcut --win-menu --win-menu-group NotePack -d notepack.msi --vendor Ogefest --license-file LICENSE
#    - name: Rename MSI
#      run: mv notepack.msi/*.exe notepack.msi/file.exe
#    
#    - name: Upload Windows Runtime
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ github.event.release.upload_url }} 
#        asset_path: ./target/notepack.zip
#        asset_name: notepack-${{ github.event.release.tag_name }}-windows-runtime.zip
#        asset_content_type: application/octet-stream      
#    
#    - name: Upload Windows Msi
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ github.event.release.upload_url }} 
#        asset_path: ./notepack.msi/file.exe
#        asset_name: notepack-${{ github.event.release.tag_name }}-windows-installer.exe
#        asset_content_type: application/octet-stream   
#        